#!/bin/sh
#*****************************************************************************
#
#  This script is used to generate truncate for user 
#
#  USAGE: gensnap username
#
#  By Barbara R.
#*****************************************************************************

typeset -u ONAME=`echo $1|cut -d. -f1 | tr -A [a-z] [A-Z]`
typeset -u NAME=`echo $2|cut -d. -f1  | tr -A [a-z] [A-Z]`
typeset -u SNAME=`echo $3|cut -d. -f1 | tr -A [a-z] [A-Z]`
if [ -z "$ONAME" ] 
then
  echo "Owner Snapshot to be created must be provided: \c"; read NAME
fi
if [ -z "$NAME" ] 
then
  echo "Snapshot to be created must be provided: \c"; read NAME
fi

if [ -z "$SNAME" ]
then
  echo "Source Snapshot must be provided: \c"; read SNAME
fi


TEMP_FILE=/tmp/gensnap_$$.sql
TEMP_FILE_LOG=/tmp/gensnap_run_$$.sql

sqlplus -s "/ as sysdba" <<EOF
clear buffer
set feed off verify off line 132 pages 0 echo off trimspo on
spool $TEMP_FILE
PROMPT
PROMPT  @$AUTO_CONN $ONAME
PROMPT 
select 'drop snapshot ' || '$NAME ' || ';' || chr(10) || chr(10) ||
       'create snapshot ${ONAME}.' ||  '$NAME ' || 
       ' tablespace ' || t.tablespace_name || chr(10) || 
       decode (i.tablespace_name ,null, 'using index tablespace '||replace(t.tablespace_name,'DATA','IX')||chr(10) ,
	       ' using index tablespace ' || i.tablespace_name || chr(10)  
	) ||
       ' refresh force with ' || decode(refresh_method,'PRIMARY KEY','primary key','rowid') ||
       ' as select * from $NAME' || MASTER_LINK || ';' 
from  dba_snapshots s,
      dba_indexes   i,
      dba_tables    t
where s.name = '$SNAME'
and   s.table_name = t.table_name
and   s.owner      = t.owner
and   s.table_name = i.table_name  (+)
and   s.owner      = i.owner (+)
and   s.owner = '${ONAME}'
and   rownum = 1 ;

select 'exec dbms_snapshot.refresh(''$NAME'',''C'') ;' from dual;
select 'exec dbms_snapshot.refresh(''$NAME'',''?'') ;' from dual;
select 'grant ' || privilege || ' on ' || '$NAME' || ' to ' || grantee || ';'
from dba_tab_privs p
where p.table_name = '$SNAME'
and p.owner        = '$ONAME'
/

select 'conn / ' from dual;
select 'drop public synonym $NAME ;' from dual;
select 'create public synonym $NAME for ${ONAME}.${NAME};' from dual;

EOF

#--------------------------------------------------------------------------------------------
num_of_changes=`grep -i "create sn" $TEMP_FILE | wc -l`
echo "------------------------------------------------------------------------------"
echo "$num_of_changes snapshots to create "
echo "Temporary script: $TEMP_FILE"
echo "------------------------------------------------------------------------------"
if (( num_of_changes==0 ))
then
	rm -f $TEMP_FILE
	exit 0
fi
#--------------------------------------------------------------------------------------------
#echo "Would you like to execute ? (Y/N) \c"; read Local
Local=Y 
if [ "$Local" = "Y" -o "$Local" = "y" ]
then
	echo "set echo on pages 0 lines 199 trimspo on
	spool $TEMP_FILE_LOG
	@$TEMP_FILE
	spool off
	" | sqlplus "/ as sysdba" 
	num_of_errors=`grep -i "ORA-" $TEMP_FILE_LOG | grep -v "12003" | grep -v "01432" | wc -l`
	echo "------------------------------------------------------------------------------"
	echo "$num_of_errors snapshots created with errors "
	echo "------------------------------------------------------------------------------"

fi
rm -f $TEMP_FILE
rm -f $TEMP_FILE_LOG
