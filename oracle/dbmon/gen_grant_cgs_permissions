#!/bin/sh
#*****************************************************************************
#
#  This script is used to show all invalid objects and compile them 
#
#  USAGE: showcompile
#
#  By Adi Zohar - Feb 2003
#*****************************************************************************

. ~/.profile >/dev/null

if [ $# -lt 1 ]
then
   echo "\n Usage: $0 <source_database>  \n"
   exit 1
fi

export ORACLE_SID=$1

export TEMP_FILE=/tmp/gen_grant_cgs_permission_$$.sql
export TEMP_FILE_LOG=/tmp/gen_grant_cgs_permission_log_$$.sql
echo "set termout off trimspo on lines 199 feed off pages 0 echo off
spool $TEMP_FILE
select 'grant select,update,insert,delete on '||owner||'.'||table_name||' to  CGS_MAINTENANCE_UPDATOR_ROLE;'
from dba_tables d 
where owner in ('SO_USER','CGS_USER')
and not exists (select 1 from dba_tab_privs p where p.owner=d.owner and d.table_name=p.table_name and p.grantee = 'CGS_MAINTENANCE_UPDATOR_ROLE')
union all
select 'grant select on '||owner||'.'||table_name||' to  CGS_MAINTENANCE_QUERY_ROLE;'
from dba_tables d 
where owner in ('SO_USER','CGS_USER')
and not exists (select 1 from dba_tab_privs p where p.owner=d.owner and d.table_name=p.table_name and p.grantee = 'CGS_MAINTENANCE_QUERY_ROLE')
union all
select 'grant select on '||sequence_owner||'.'||sequence_name||' to  CGS_MAINTENANCE_QUERY_ROLE;'
from dba_sequences d 
where sequence_owner in ('SO_USER','CGS_USER')
and not exists (select 1 from dba_tab_privs p where p.owner=d.sequence_owner and d.sequence_name=p.table_name and p.grantee = 'CGS_MAINTENANCE_QUERY_ROLE')
and 1=2 -- sequence cause errors to the standby if not exists
union all
select 'grant select on '||sequence_owner||'.'||sequence_name||' to  CGS_MAINTENANCE_UPDATOR_ROLE;'
from dba_sequences d 
where sequence_owner in ('SO_USER','CGS_USER')
and not exists (select 1 from dba_tab_privs p where p.owner=d.sequence_owner and d.sequence_name=p.table_name and p.grantee = 'CGS_MAINTENANCE_UPDATOR_ROLE')
and 1=2 -- sequence cause errors to the standby if not exists
order by 1;
spool off
" | sqlplus -s "/ as sysdba" > /dev/null

#--------------------------------------------------------------------------------------------
head -n 10 $TEMP_FILE
echo "..."

num_of_changes=`grep -i "grant" $TEMP_FILE | wc -l`
echo "------------------------------------------------------------------------------"
echo "$num_of_changes grant to execute "
echo "Temporary script: $TEMP_FILE"
echo "------------------------------------------------------------------------------"
if (( num_of_changes==0 ))
then
	rm -f $TEMP_FILE
	exit 0
fi

export PARAM=$2 
Local=$PARAM
if [ -z "$PARAM" ]
then
	echo "Would you like to execute ? (Y/N) \c"; read Local
fi

if [ "$Local" = "Y" -o "$Local" = "y" ]
then
	echo "set echo on pages 0 lines 199 trimspo on time on timing on 
	spool $TEMP_FILE_LOG
        set term off
	@$TEMP_FILE
	spool off
	" | sqlplus "/ as sysdba" 
	num_of_errors=`grep -i "ORA-" $TEMP_FILE_LOG | wc -l`
	num_of_success=`grep -i "granted" $TEMP_FILE_LOG | grep -v "compilation err" | wc -l`
	echo "------------------------------------------------------------------------------"
	echo "$num_of_success objects grants successfully "
	echo "$num_of_errors objects grants with errors "
	echo "------------------------------------------------------------------------------"

fi
rm -f $TEMP_FILE
rm -f $TEMP_FILE_LOG
