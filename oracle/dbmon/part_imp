#!/bin/sh
#*****************************************************************************
#
#  SOURCE          : /oravl01/oracle/dba//bin/part_imp
#  VERSION         : $Revision: 1.0 $
#  AUTHOR          : Adi Zohar
#  AUTHOR          : Kuen-Yih Chang (kchang@amdocs.com)
#  DATE            : $Date: Tue Oct  2 18:06:44 CDT 2001 $
#
#  This script is used to import table by partitions.  gzimp will be used.
#  Also, should run this script as local (ORACLE_SID or TWO_TASK is set).
#
#  USAGE: part_imp 
#
#  Options: 
#
#  Example:
#
#*****************************************************************************

export PARALLEL_SIZE=10

typeset -u tt=
typeset -u yn=

typeset -l pttn=
typeset -l LOWER_TABLE=

typeset -u NAME=$1
typeset -u TABLE_NAME=
typeset -u OWNER=

if [ -z "$NAME" ] 
then
  echo "OWNER.TABLE_NAME must be provided: \c"; read NAME
fi

echo $NAME | awk -F"." '{print $1 " " $2 }' | read OWNER TABLE_NAME

if [ -z "$TABLE_NAME" ] 
then
  echo "OWNER.TABLE_NAME must be provided, aborting \c"
  exit 1
fi

LOWER_TABLE=$TABLE_NAME

#==============================================================================
#get character set
#==============================================================================
echo "set pages 0
set lines 99 echo off
set feedback off verify off
select a.value||'_'||b.value||'.'||c.value param from
           NLS_DATABASE_PARAMETERS a,
           NLS_DATABASE_PARAMETERS b,
           NLS_DATABASE_PARAMETERS c
where
          a.parameter='NLS_LANGUAGE' and
          b.parameter='NLS_TERRITORY' and
          c.parameter='NLS_CHARACTERSET'
/ " | sqlplus -s "/ as sysdba" | read NLS_PARAM

export NLS_LANG=$NLS_PARAM

echo "1. Database $ORACLE_SID Characterset is: $NLS_LANG "

#==============================================================================
#Import in the background
#==============================================================================
cyc=0

for pttndgz in `ls -1 ${LOWER_TABLE}*dmp.gz`
do
  pttn=`basename $pttndgz .dmp.gz`
  gzimp / file=$pttn.dmp full=y buffer=20480000 commit=y indexes=n analyze=y constraints=n ignore=y log=imp_$pttn.log 1>/dev/null 2>&1 &
  (( cyc=cyc+1 ))

        # count the parallel cycle
        if (( cyc%${PARALLEL_SIZE}==0 ))
        then
                echo "waiting..."
                wait
        fi

done
echo "2. Importing ${OWNER}.${TABLE_NAME} - $cyc Partitions (Started at `date`) in background...." 
wait

ROWS=`grep "rows imported" imp_${LOWER_TABLE}*.log | awk '{print $6}' | awk '{ s += $1 } END {printf("Total %d\n",s)}' `
NO_ERRORS=`grep "Import terminated" imp_${LOWER_TABLE}*.log | grep without | wc -l `
ERRORS=`grep "Import terminated" imp_${LOWER_TABLE}*.log | grep "with wa" | wc -l `

echo "3. Finish impporting ${OWNER}.${TABLE_NAME} - $ROWS rows (Finish  at `date`)."
echo "4. Checking Logs: $NO_ERRORS imported sucessfully, $ERRORS imported with warnings"
echo "5. Done"

