#!/bin/sh
#*****************************************************************************
#
#  SOURCE          : /oravl01/oracle/dba/dbmon/showtable
#  VERSION         : $Revision: 1.0 $
#  AUTHOR          : Kuen-Yih Chang (kchang@amdocs.com) shell
#  AUTHOR          : Adi Zohar (adizo@amdocs.com) SQL
#  DATE            : $Date: Tue Nov  5 21:56:55 CST 2002 $
#
#  This script is used to describe table definitions from sys objects 
#  very fast on large database
#
#  USAGE: showtable owner.table_name
#
#*****************************************************************************

typeset -u uid=`echo $1|cut -d. -f1`
typeset -u tab=`echo $1|cut -d. -s -f2`
if [ -z "$uid" ] 
then
  echo "Table owner: \c"; read uid
fi
if [ -z "$tab" ]
then
  echo "Table name:  \c"; read tab
fi

echo "
set tab off trims on feedback off
set pages 999 lines 200 trimsp on long 1000000
prompt ********************************************************************************************
prompt *                                       ${uid}.$tab                                                        
prompt ********************************************************************************************
col name for A32
desc $uid.$tab

prompt ********************************************************************************************
prompt *                     Table Constraints, Grants and Synonyms                               *
prompt ********************************************************************************************
col constraint_name		for a34
col constraint_type		for a1  head T
col status		trunc	for a3  head Sts
col validated		trunc	for a5  head Valid
col SEARCH_CONDITION	trunc	for a30 
col grant_to			for a25
col Reference		trunc	for a30 
col grant_to			for a30
col privilege			for a25
col synony			for a66 head \"Synonyms points to ${uid}.$tab \"

select constraint_name, constraint_type,status, validated, 
	r_owner||decode(r_constraint_name,null,null,'.')||r_constraint_name as Reference,
	SEARCH_CONDITION
from 
	 dba_constraints
where 
	  owner='$uid' and
	  table_name='$tab'
order by 1,2	  
/
break on grant_to nodup
select grantee as grant_to, privilege 
from 
	dba_tab_privs
where
	owner='$uid' and
	table_name='$tab'
order by 1,2
/
select 
	(owner||'.'||synonym_name) as synony from 
	dba_synonyms
where 
	  table_owner='$uid' and
	  table_name='$tab'
order by 1
/
" | sqlplus -s "/ as sysdba"

###########################################################################################################
# INDEX SIZE
###########################################################################################################
echo "
prompt ************************************************************************************************************************
prompt *                                                    Indexes                                                           *
prompt ************************************************************************************************************************
set tab off trims on feedback off
set pages 999 lines 200 trimsp on long 1000000

break on index_name nodup on uniqueness nodup
col function                    for a200
col index_name			for a35
col column_name			for a30
col POS				for 999
col uniqueness			for a3 trunc
set lines 300 trimsp on 

select  
        ix.index_name, ix.uniqueness, ic.column_position POS, ic.column_name,null as function
from 
        dba_indexes ix, dba_ind_columns ic
where
  ix.table_name = '$tab' and ix.table_owner = '$uid' and 
  ix.table_name = ic.table_name and
  ix.table_owner = ic.table_owner and
  ic.index_name = ix.index_name and
  ix.funcidx_status is null 
union all 
select 
    ix.index_name,ix.uniqueness, ic.column_position as POS, nvl(ITYP_NAME,ic.column_name) as column_name, die.column_expression
from
    dba_indexes ix,
    DBA_IND_EXPRESSIONS die,
    dba_ind_columns ic
where 
    ix.table_name = '$tab' and ix.table_owner = '$uid' and 
    ix.funcidx_status='ENABLED' and
    ix.table_name  = ic.table_name and
    ix.table_owner = ic.table_owner and
    ix.index_name  = ic.index_name and 
    ic.index_name  = die.index_name (+) and
    ic.index_owner = die.index_owner (+) and
    ic.column_position = die.column_position(+) 
order by 1, 3 ;
" | sqlplus -s "/ as sysdba" | sed -e 's/\"//g' -e 's/SYS.XMLTYPE.//g' -e 's/SYS_MAKEXML(SYS_NC00008$),//g' -e 's/------------------------------------------------------------/--/g'

###########################################################################################################
# INDEX SIZE
###########################################################################################################
sqlplus -s "/ as sysdba" <<EOSQL
col tablespace_name		for a23 trunc head TABLESPACE 
col partition_name	trunc	for a29 head Partition
col part_name	trunc	for a15 
col table_name		trunc	for a25
col grant_to			for a25
col index_name			for a32
col DEGREE			for a3 trunc head Deg
col INI_TRANS			for 99 head ITR
col MAX_TRANS			for 999 head MTR 
col PCT_FREE			for 99 head Fr
col PCT_USED			for 99 head Us
col p#				for 99 head "P#"
col INITMB			for 999 head Init
col NEXTMB			for 999 head Next
col FREELISTS			for 99 head FLS
col FREELIST_GROUPS		for 99 head FLG   
col EXTENTS			for 9,999 head "Exts"
col synony			for a66 head "Synonyms points to ${uid}.$tab "
col Table_Size			for 999,999,999 head "${uid}.$tab Size (Mb) "
col sizemb			for 999,999 head "Size Mb"
col constraint_name		for a34
col constraint_type		for a1  head T
col status		trunc	for a3  head Sts
col validated		trunc	for a5  head Valid
col Reference		trunc	for a30 
col SEARCH_CONDITION	trunc	for a30 

set tab off trims on feedback off
set pages 999 lines 200 trimsp on long 1000000

break on index_name nodup
select segment_name index_name, partition_name, 
	   degree,
	   di.INI_TRANS,
	   di.MAX_TRANS,
	   ds.freelists, 
	   ds.freelist_groups, 
	   ds.tablespace_name, 
	   ds.initial_extent/1024/1024 initmb, 
	   ds.next_extent/1024/1024 nextmb,
	   ds.extents,
	   ds.bytes/1024/1024 sizemb,
	   di.PCT_FREE
from 
	 dba_segments ds,
	 dba_indexes di
where
	 ds.owner=di.owner and
	 ds.segment_name=di.index_name and
	 di.owner='$uid' and
	 di.table_name='$tab'
order by 1,2
/
prompt 
prompt ****************************************************************************************************************************************
prompt *                                                        Table Segments                                                                *
prompt ****************************************************************************************************************************************
compute sum of sizemb on table_name
break on table_name nodup
select 
	   dt.table_name, 
	   ds.partition_name,
	   degree,
	   dt.INI_TRANS, 
	   dt.MAX_TRANS, 
	   ds.freelists, 
	   ds.freelist_groups, 
	   ds.tablespace_name, 
	   ds.initial_extent/1024/1024 initmb, 
	   ds.next_extent/1024/1024 nextmb,
	   ds.bytes/1024/1024 sizemb,
	   ds.extents,
	   dt.PCT_FREE,
	   dt.pct_used
from 
	 dba_segments ds,
	 dba_tables dt
where
	 ds.owner=dt.owner and
	 ds.segment_name=dt.table_name and
	 dt.owner='$uid' and
	 dt.table_name='$tab' 
order by 1,2;

select     l.table_name,
           lb.partition_name ,
           ds.partition_name part_name,
           null as degree,
           null as INI_TRANS,
           null as MAX_TRANS,
           ds.freelists,
           ds.freelist_groups,
           ds.tablespace_name,
           ds.initial_extent/1024/1024 initmb,
           ds.next_extent/1024/1024 nextmb,
           ds.bytes/1024/1024 sizemb,
           ds.extents
from
    dba_segments ds,
    dba_lobs l,
    dba_lob_partitions lb
where
    ds.segment_name = l.segment_name and
    ds.owner=l.owner and
    l.owner='$uid' and
    l.table_name='$tab' and
        ds.owner=lb.table_owner (+) and
    ds.partition_name = lb.lob_partition_name (+)
    order by 1,2;

quit
EOSQL

